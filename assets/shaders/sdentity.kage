package main

const (
	EntityChest = 0.5
	EntityEnemy = 1.5
	EntityAoe   = 2.5
	EntityHeart = 3.5
)

func chest(p vec2) vec4 {
	d := length(mod(p, 0.5))
	d = sqrt(d*d*(3.-2.*d))
	clr := mix(
		vec4(0.27, 0.84, 0.17, 1.),
		vec4(0., 0.54, 0.85, 1.),
		d,
	)

	return clr
}

func enemy(p vec2, args vec3) vec4 {
	r := 1.
	if args.z <= 0.25 {
		r -= (1.-args.z * 4.)
	}

	d := length(p)-r
	if d > 0. {
		return vec4(0.)
	}
	d /= (r*2.)
	clr := mix(
		mix(
			vec4(0.93, 0.11, 0.14, 1.),
			vec4(0.61, 0.15, 0.71, 1.),
			args.y,
		),
		vec4(1., 0.87, 0., 1.),
		abs(d)*(clamp(0.75+args.x, 0., 1.)),
	)

	return clr
}

func shield(p vec2) vec4 {
	d := length(p)
	d = sqrt(d*d*(3.-2.*d))
	clr := mix(
		vec4(0.27, 0.84, 0.17, 1.),
		vec4(0., 0.54, 0.85, 1.),
		d,
	)

	return clr
}

func Fragment(position vec4, texCoord vec2, color vec4) vec4 {
	clr := vec4(0.)
	
	p := texCoord * 2. - 1.
	if color.r < EntityChest {
		clr = chest(p)
	} else if color.r < EntityEnemy {
		clr = enemy(p, color.gba)
	} else if color.r < EntityAoe {
	} else if color.r < EntityHeart {		
	}
	
	return clr
}